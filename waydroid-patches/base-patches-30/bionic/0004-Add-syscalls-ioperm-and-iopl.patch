From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Chih-Wei Huang <cwhuang@linux.org.tw>
Date: Wed, 24 Aug 2016 22:58:24 +0800
Subject: [PATCH] Add syscalls ioperm and iopl

---
 libc/SYSCALLS.TXT                  |  2 ++
 libc/arch-x86/syscalls/ioperm.S    | 39 ++++++++++++++++++++++++++++++
 libc/arch-x86/syscalls/iopl.S      | 29 ++++++++++++++++++++++
 libc/arch-x86_64/syscalls/ioperm.S | 15 ++++++++++++
 libc/arch-x86_64/syscalls/iopl.S   | 15 ++++++++++++
 libc/libc.map.txt                  |  2 ++
 6 files changed, 102 insertions(+)
 create mode 100644 libc/arch-x86/syscalls/ioperm.S
 create mode 100644 libc/arch-x86/syscalls/iopl.S
 create mode 100644 libc/arch-x86_64/syscalls/ioperm.S
 create mode 100644 libc/arch-x86_64/syscalls/iopl.S

diff --git a/libc/SYSCALLS.TXT b/libc/SYSCALLS.TXT
index 6142baf..6d8b4b6 100644
--- a/libc/SYSCALLS.TXT
+++ b/libc/SYSCALLS.TXT
@@ -349,6 +349,8 @@ int     cacheflush:__ARM_NR_cacheflush(long start, long end, long flags)  arm
 
 # x86-specific
 int     __set_thread_area:set_thread_area(void*) x86
+int    ioperm(unsigned long, unsigned long, int) x86,x86_64
+int    iopl(int) x86,x86_64
 
 # vdso stuff.
 int __clock_getres:clock_getres(clockid_t, struct timespec*) all
diff --git a/libc/arch-x86/syscalls/ioperm.S b/libc/arch-x86/syscalls/ioperm.S
new file mode 100644
index 0000000..264b47a
--- /dev/null
+++ b/libc/arch-x86/syscalls/ioperm.S
@@ -0,0 +1,39 @@
+/* Generated by gensyscalls.py. Do not edit. */
+
+#include <private/bionic_asm.h>
+
+ENTRY(ioperm)
+    pushl   %ebx
+    .cfi_def_cfa_offset 8
+    .cfi_rel_offset ebx, 0
+    pushl   %ecx
+    .cfi_adjust_cfa_offset 4
+    .cfi_rel_offset ecx, 0
+    pushl   %edx
+    .cfi_adjust_cfa_offset 4
+    .cfi_rel_offset edx, 0
+
+    call    __kernel_syscall
+    pushl   %eax
+    .cfi_adjust_cfa_offset 4
+    .cfi_rel_offset eax, 0
+
+    mov     20(%esp), %ebx
+    mov     24(%esp), %ecx
+    mov     28(%esp), %edx
+    movl    $__NR_ioperm, %eax
+    call    *(%esp)
+    addl    $4, %esp
+
+    cmpl    $-MAX_ERRNO, %eax
+    jb      1f
+    negl    %eax
+    pushl   %eax
+    call    __set_errno_internal
+    addl    $4, %esp
+1:
+    popl    %edx
+    popl    %ecx
+    popl    %ebx
+    ret
+END(ioperm)
diff --git a/libc/arch-x86/syscalls/iopl.S b/libc/arch-x86/syscalls/iopl.S
new file mode 100644
index 0000000..9ede095
--- /dev/null
+++ b/libc/arch-x86/syscalls/iopl.S
@@ -0,0 +1,29 @@
+/* Generated by gensyscalls.py. Do not edit. */
+
+#include <private/bionic_asm.h>
+
+ENTRY(iopl)
+    pushl   %ebx
+    .cfi_def_cfa_offset 8
+    .cfi_rel_offset ebx, 0
+
+    call    __kernel_syscall
+    pushl   %eax
+    .cfi_adjust_cfa_offset 4
+    .cfi_rel_offset eax, 0
+
+    mov     12(%esp), %ebx
+    movl    $__NR_iopl, %eax
+    call    *(%esp)
+    addl    $4, %esp
+
+    cmpl    $-MAX_ERRNO, %eax
+    jb      1f
+    negl    %eax
+    pushl   %eax
+    call    __set_errno_internal
+    addl    $4, %esp
+1:
+    popl    %ebx
+    ret
+END(iopl)
diff --git a/libc/arch-x86_64/syscalls/ioperm.S b/libc/arch-x86_64/syscalls/ioperm.S
new file mode 100644
index 0000000..57d3822
--- /dev/null
+++ b/libc/arch-x86_64/syscalls/ioperm.S
@@ -0,0 +1,15 @@
+/* Generated by gensyscalls.py. Do not edit. */
+
+#include <private/bionic_asm.h>
+
+ENTRY(ioperm)
+    movl    $__NR_ioperm, %eax
+    syscall
+    cmpq    $-MAX_ERRNO, %rax
+    jb      1f
+    negl    %eax
+    movl    %eax, %edi
+    call    __set_errno_internal
+1:
+    ret
+END(ioperm)
diff --git a/libc/arch-x86_64/syscalls/iopl.S b/libc/arch-x86_64/syscalls/iopl.S
new file mode 100644
index 0000000..85f82de
--- /dev/null
+++ b/libc/arch-x86_64/syscalls/iopl.S
@@ -0,0 +1,15 @@
+/* Generated by gensyscalls.py. Do not edit. */
+
+#include <private/bionic_asm.h>
+
+ENTRY(iopl)
+    movl    $__NR_iopl, %eax
+    syscall
+    cmpq    $-MAX_ERRNO, %rax
+    jb      1f
+    negl    %eax
+    movl    %eax, %edi
+    call    __set_errno_internal
+1:
+    ret
+END(iopl)
diff --git a/libc/libc.map.txt b/libc/libc.map.txt
index 4bfb8a2..ed72df5 100644
--- a/libc/libc.map.txt
+++ b/libc/libc.map.txt
@@ -522,6 +522,8 @@ LIBC {
     inotify_rm_watch;
     insque; # introduced=21
     ioctl;
+    iopl; # x86 x86_64
+    ioperm; # x86 x86_64
     isalnum;
     isalnum_l; # introduced=21
     isalpha;
